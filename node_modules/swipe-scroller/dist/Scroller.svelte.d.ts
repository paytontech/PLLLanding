import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        /** Width and height of the clickable control buttons. */ buttonWidth?: string | undefined;
        /** Horizontal gap between the provided card components. */ cardGap?: string | undefined;
        /** Hang control buttons on the outer container border. */ hangButtons?: boolean | undefined;
        /** Invert the scroll direction of the control buttons. */ invertButtons?: boolean | undefined;
    };
    events: {
        scroll: Event;
        scrollend: Event | UIEvent | AnimationEvent | MouseEvent | InputEvent | FocusEvent | CompositionEvent | ClipboardEvent | DragEvent | ErrorEvent | FormDataEvent | PointerEvent | KeyboardEvent | ProgressEvent<EventTarget> | SecurityPolicyViolationEvent | SubmitEvent | TouchEvent | TransitionEvent | WheelEvent;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        noscript: {};
        default: {};
        'button-prev': {};
        'button-next': {};
    };
};
export type ScrollerProps = typeof __propDef.props;
export type ScrollerEvents = typeof __propDef.events;
export type ScrollerSlots = typeof __propDef.slots;
export default class Scroller extends SvelteComponentTyped<ScrollerProps, ScrollerEvents, ScrollerSlots> {
}
export {};
